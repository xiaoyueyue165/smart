// 1.声明变量
// $primaryBg:pink;
// $borderRadius:10px;
// ./setting.scss和setting.scss这两种引入方式有什么不一样
// 答: 没有任何区别  只是前面加./更加的标准  在linux系统中不认后面的引入方式
//     如果想要返回上一级目录用../就可以了
@import './setting.scss';
// 2.使用变量
body {
  background-color: $primaryBg;
}
div{
  border-radius: $borderRadius;
  font-size:20px;
  background-color: red;
  text-align: center;
  line-height: 22px;
}
// 3.注释
// 这是静默注释 这个注释不会显示到编译好的css中  这样的注释是给开发者看的
/* 这是多行注释  这个注释会被编译到css中显示 */

// 4.嵌套(嵌套生成的代码尽量不超过三层)
  // #content article h1 { color: #333 }
  // #content article p { margin-bottom: 4px }
  // #content aside { background-color: #EEE }
  #content {
    article {
      h1 {
        color:#333;
      }
      p {
        margin-bottom: 4px;
      }
    }
    aside{
      background-color: #eee;
    }
  }


// 5.父选择器的标识符&;

  // article a { color: blue }
  // article a:hover { color: red }
  article {
    a{
      color:blue;
      &:hover{
        color:red;
      }
    }
  }



// 6.群组选择器的嵌套
  // .container h1, .container h2, .container h3 { margin-bottom: 8px }
 .container{
   h1,h2,h3{
     margin-bottom:8px;
   }
 }

// 7.子组合选择器 >(直接子元素选择器)
  // article > section { border: 1px solid #ccc }
 article{
   > section{
     border:1px solid #ccc;
   }
 }


// 8.导入SASS文件;
// @import './setting.scss';

// 混合器和类名有什么区别
// 答:混合器是sass中的语法规定  如果这一段css可以用非常简短的名字归纳总结  就用混合器
//    类名是css中的语法规定 更重要的是 类名会写入到html中  类名一般是有语义化的
// 9.混合器
  // box{
  //   border-bottom-left-radius: 10px;
  //   border-bottom-right-radius: 10px;
  //   border-top-left-radius: 0px;
  //   border-top-right-radius: 0px;
  // }

  // @mixin  关键字就是用来定义混合器的
  // 语法 @mixin  混合器的名字  {}
  @mixin bottom-radius {
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
  }
  @mixin box-sizing {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box;
  }

  // 调用
  .box{
    @include bottom-radius();
    @include box-sizing();
  }


// 10.给混合器传参;
  // a:link {color: #FF0000}		/* 未访问的链接 */
  // a:visited {color: #00FF00}	/* 已访问的链接 */
  // a:hover {color: #FF00FF}	/* 鼠标移动到链接上 */
  // a:active {color: #0000FF}	/* 选定的链接 */
  // normal正常
// @mixin mouse-over($normal,$link,$visited,$hover,$active){
//   color:$normal;
//   &:link{color:$link}
//   &:visited{color:$visited}
//   &:hover{color:$hover}
//   &:active{color:$active}
// }
// a{
//   @include mouse-over(#ccc, #FF0000,#00FF00, #FF00FF, #0000FF)
// }

// li{
//   @include mouse-over(pink, green, blue, yellow, purple)
// }

// 11.默认参数值;
@mixin mouse-over($normal:black,$link:orange,$visited:pink,$hover:hotpink,$active:deeppink){
  color:$normal;
  &:link{color:$link}
  &:visited{color:$visited}
  &:hover{color:$hover}
  &:active{color:$active}
}

ul{
  @include mouse-over(#999)
}
// 12.使用选择器继承来精简CSS;
// p标签的样式和div完全一致 但是多了一个color:red;
// 继承千万不要乱用
// @extend 就是继承   @extend 选择器
// 如果两个样式不一样的地方多于3个就尽量不要用继承
p{
  @extend div;
  color:red;
}